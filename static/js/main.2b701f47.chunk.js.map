{"version":3,"sources":["Components/Sun.jsx","Components/Planet.jsx","Data/PlanetsInfo.js","App.js","index.js"],"names":["Sun","texture","useMemo","THREE","load","position","attach","args","object","Planet","name","zFactor","orbitWidth","radius","revolutionSpeed","rotationSpeed","imagePath","mesh","useRef","direction","useFrame","current","x","z","Math","abs","rotation","PI","ref","PlanetsInfo","extend","OrbitControls","Controls","orbitRef","useThree","camera","gl","update","domElement","App","map","planetInfo","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAoBeA,EAjBH,WACV,IAAMC,EAAUC,mBAAQ,kBAAM,IAAIC,iBAAsBC,KAAK,aAAY,IAEzE,OACE,0BAAMC,SAAU,CAAC,EAAG,EAAG,IACrB,0CAAsBC,OAAO,WAAWC,KAAM,CAAC,EAAK,GAAI,MACxD,uCAAmBD,OAAO,YACxB,+BACEA,OAAO,MACPE,OAAQP,OC4BHQ,EApCA,SAAC,GAQV,EAPJC,KAOK,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,WACAC,EAII,EAJJA,OAII,IAHJC,uBAGI,MAHc,IAGd,EAFJC,EAEI,EAFJA,cACAC,EACI,EADJA,UAEMf,GAAU,IAAIE,iBAAsBC,KAAKY,GACzCC,EAAOC,mBACTC,EAAY,EAehB,OAbAC,aAAS,WACHH,EAAKI,QAAQhB,SAASiB,EAAIV,EAC5BO,GAAa,EACJF,EAAKI,QAAQhB,SAASiB,GAAKV,IACpCO,EAAY,GAEdF,EAAKI,QAAQhB,SAASiB,GAAKH,EAAYL,EACvCG,EAAKI,QAAQhB,SAASkB,EACnBZ,EAAUQ,GAAaP,EAAaY,KAAKC,IAAIR,EAAKI,QAAQhB,SAASiB,IACpEV,EACFK,EAAKI,QAAQK,SAASH,GAAMC,KAAKG,GAAKZ,EAAiB,MAIvD,0BAAMV,SAAU,CAAC,EAAG,EAAG,GAAIuB,IAAKX,EAAMS,SAAU,CAACF,KAAKG,GAAK,EAAG,EAAG,IAC/D,0CAAsBrB,OAAO,WAAWC,KAAM,CAACM,EAAQ,GAAI,MAC3D,uCAAmBP,OAAO,YACxB,+BAAWA,OAAO,MAAME,OAAQP,OCiCzB4B,EAnEK,CAClB,CACEnB,KAAM,UACNC,QAAS,EACTC,WAAY,EACZC,OAAQ,GACRE,cAAe,MACfC,UAAW,eAEb,CACEN,KAAM,QACNC,QAAS,EACTC,WAAY,EACZC,OAAQ,GACRE,cAAe,MACfC,UAAW,aAEb,CACEN,KAAM,QACNC,QAAS,EACTC,WAAY,EACZC,OAAQ,GACRE,cAAe,GACfC,UAAW,aAEb,CACEN,KAAM,OACNC,QAAS,EACTC,WAAY,EACZC,OAAQ,GACRE,cAAe,KACfC,UAAW,YAEb,CACEN,KAAM,UACNC,QAAS,GACTC,WAAY,GACZC,OAAQ,GACRE,cAAe,IACfC,UAAW,eAEb,CACEN,KAAM,SACNC,QAAS,GACTC,WAAY,GACZC,OAAQ,GACRE,cAAe,KACfC,UAAW,cAEb,CACEN,KAAM,SACNC,QAAS,GACTC,WAAY,GACZC,OAAQ,GACRE,cAAe,KACfC,UAAW,cAEb,CACEN,KAAM,UACNC,QAAS,GACTC,WAAY,GACZC,OAAQ,GACRE,cAAe,IACfC,UAAW,gB,MCtDfc,YAAO,CAAEC,oBAET,IAAMC,EAAW,WACf,IAAMC,EAAWf,mBADI,EAEEgB,cAAfC,EAFa,EAEbA,OAAQC,EAFK,EAELA,GAMhB,OAJAhB,aAAS,WACPa,EAASZ,QAAQgB,YAGZ,mCAAe9B,KAAM,CAAC4B,EAAQC,EAAGE,YAAaV,IAAKK,KAe7CM,MAZf,WACE,OACE,kBAAC,IAAD,CAAQJ,OAAQ,CAAE9B,SAAU,CAAC,EAAG,EAAG,MACjC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACCwB,EAAYW,KAAI,SAACC,GAAD,OACf,kBAAC,EAAD,iBAAYA,EAAZ,CAAwBC,IAAKD,EAAW/B,aCvBhDiC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2b701f47.chunk.js","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst Sun = () => {\r\n  const texture = useMemo(() => new THREE.TextureLoader().load(\"sun.jpg\"), []);\r\n\r\n  return (\r\n    <mesh position={[0, 0, 0]}>\r\n      <sphereBufferGeometry attach=\"geometry\" args={[1.0, 32, 32]} />\r\n      <meshBasicMaterial attach=\"material\">\r\n        <primitive\r\n          attach=\"map\"\r\n          object={texture}\r\n          //   onUpdate={(self) => img && (self.needsUpdate = true)}\r\n        ></primitive>\r\n      </meshBasicMaterial>\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default Sun;\r\n","import React, { useRef } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport * as THREE from \"three\";\r\n\r\nconst Planet = ({\r\n  name,\r\n  zFactor,\r\n  orbitWidth,\r\n  radius,\r\n  revolutionSpeed = 0.01,\r\n  rotationSpeed,\r\n  imagePath,\r\n}) => {\r\n  const texture = new THREE.TextureLoader().load(imagePath);\r\n  const mesh = useRef();\r\n  let direction = 1;\r\n\r\n  useFrame(() => {\r\n    if (mesh.current.position.x > orbitWidth) {\r\n      direction = -1; // Left\r\n    } else if (mesh.current.position.x < -orbitWidth) {\r\n      direction = 1; // Right\r\n    }\r\n    mesh.current.position.x += direction * revolutionSpeed;\r\n    mesh.current.position.z =\r\n      (zFactor * direction * (orbitWidth - Math.abs(mesh.current.position.x))) /\r\n      orbitWidth;\r\n    mesh.current.rotation.z += (Math.PI * rotationSpeed) / 10;\r\n  });\r\n\r\n  return (\r\n    <mesh position={[2, 0, 0]} ref={mesh} rotation={[Math.PI / 2, 0, 0]}>\r\n      <sphereBufferGeometry attach=\"geometry\" args={[radius, 16, 16]} />\r\n      <meshBasicMaterial attach=\"material\">\r\n        <primitive attach=\"map\" object={texture}></primitive>\r\n      </meshBasicMaterial>\r\n    </mesh>\r\n  );\r\n};\r\n\r\nexport default Planet;\r\n","const PlanetsInfo = [\r\n  {\r\n    name: \"Mercury\",\r\n    zFactor: 2,\r\n    orbitWidth: 2,\r\n    radius: 0.2,\r\n    rotationSpeed: 0.0017,\r\n    imagePath: \"mercury.jpg\",\r\n  },\r\n  {\r\n    name: \"Venus\",\r\n    zFactor: 4,\r\n    orbitWidth: 4,\r\n    radius: 0.3,\r\n    rotationSpeed: 0.00041,\r\n    imagePath: \"venus.jpg\",\r\n  },\r\n  {\r\n    name: \"Earth\",\r\n    zFactor: 6,\r\n    orbitWidth: 6,\r\n    radius: 0.4,\r\n    rotationSpeed: 0.1,\r\n    imagePath: \"earth.jpg\",\r\n  },\r\n  {\r\n    name: \"Mars\",\r\n    zFactor: 8,\r\n    orbitWidth: 8,\r\n    radius: 0.5,\r\n    rotationSpeed: 0.096,\r\n    imagePath: \"mars.jpg\",\r\n  },\r\n  {\r\n    name: \"Jupiter\",\r\n    zFactor: 10,\r\n    orbitWidth: 10,\r\n    radius: 0.7,\r\n    rotationSpeed: 0.24,\r\n    imagePath: \"jupiter.jpg\",\r\n  },\r\n  {\r\n    name: \"Saturn\",\r\n    zFactor: 12,\r\n    orbitWidth: 12,\r\n    radius: 0.7,\r\n    rotationSpeed: 0.218,\r\n    imagePath: \"saturn.jpg\",\r\n  },\r\n  {\r\n    name: \"Uranus\",\r\n    zFactor: 14,\r\n    orbitWidth: 14,\r\n    radius: 0.6,\r\n    rotationSpeed: 0.141,\r\n    imagePath: \"uranus.jpg\",\r\n  },\r\n  {\r\n    name: \"Neptune\",\r\n    zFactor: 16,\r\n    orbitWidth: 16,\r\n    radius: 0.6,\r\n    rotationSpeed: 0.15,\r\n    imagePath: \"neptune.jpg\",\r\n  },\r\n];\r\n\r\nexport default PlanetsInfo;\r\n","import React, { useRef } from \"react\";\r\nimport { Canvas, useFrame, extend, useThree } from \"react-three-fiber\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport Sun from \"./Components/Sun\";\r\nimport Planet from \"./Components/Planet\";\r\nimport PlanetsInfo from \"./Data/PlanetsInfo\";\r\n\r\nimport \"./App.css\";\r\n\r\nextend({ OrbitControls });\r\n\r\nconst Controls = () => {\r\n  const orbitRef = useRef();\r\n  const { camera, gl } = useThree();\r\n\r\n  useFrame(() => {\r\n    orbitRef.current.update();\r\n  });\r\n\r\n  return <orbitControls args={[camera, gl.domElement]} ref={orbitRef} />;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <Canvas camera={{ position: [0, 0, 17] }}>\r\n      <Controls />\r\n      <Sun />\r\n      {PlanetsInfo.map((planetInfo) => (\r\n        <Planet {...planetInfo} key={planetInfo.name} />\r\n      ))}\r\n    </Canvas>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}